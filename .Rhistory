x <- as.matrix(data[, - c(1,2)])
stat.tests(data)
)
stat.tests <- function(data){
for(i in 1 : length(data)){
adf <- FALSE
kpss <- FALSE
q <- FALSE
ar <- FALSE
if(adf.test(data[, i])$p.value > 0.05){
adf = TRUE
}
if(kpss.test(data[, i])$p.value < 0.05){
kpss = TRUE
}
if(Box.test(data[, i], lag = 1, type = c("Ljung-Box")) < 0.05){
q = TRUE
}
if(arima(x = y, order = c(1,0,0))[["coef"]][["ar1"]] > 0.7){
ar = TRUE
}
if(adf & kpss | adf & q | adf & ar | kpss & ar | kpss & q | ar & q == TRUE){
print(paste('variable', names(data[i]), 'non-stationnaire'), sep = ' ')
}
}
}
# Big Data project for M2 EKAP
library(readxl)
library(gets)
library(glmnet)
library(corrplot)
library(tidyverse)
library(doParallel)
library(tseries)
library(lmtest)
library(ggplot2)
setwd("/Users/Lucas/Desktop/Cours/Big Data")
data = data.frame(read_excel('data.xlsx')[1 : 980,])
summary(data)
cor <- cor(data[, - c(1, 2)], use = 'complete.obs', method = c("spearman"))
corrplot(cor, method = "color")
cor_comp <- cor(data[, 2 : 28], use = 'complete.obs', method = c("spearman"))
corrplot(cor_comp, method = "color")
y <- as.matrix(scale(data[, 2], center = T, scale = F))
ggplot(mapping = aes(x = date, y = Index), data)+
geom_line(col = 'steelblue')+
theme_minimal()
x <- as.matrix(data[, - c(1,2)])
stat.tests(data)
warnings()
stat.tests(data)
stat.tests <- function(data){
for(i in 1 : length(data)){
adf <- FALSE
kpss <- FALSE
q <- FALSE
ar <- FALSE
if(adf.test(data[, i])$p.value > 0.05){
adf = TRUE
}
if(kpss.test(data[, i])$p.value < 0.05){
kpss = TRUE
}
if(Box.test(data[, i], lag = 1, type = c("Ljung-Box")) < 0.05){
q = TRUE
}
if(arima(x = y, order = c(1,0,0))[["coef"]][["ar1"]] > 0.7){
ar = TRUE
}
if(adf & kpss | adf & q | adf & ar | kpss & ar | kpss & q | ar & q == TRUE){
print(paste('variable :', names(data[i]), 'non-stationnaire'), sep = ' ')
var_non_stat <- diff(data[, i])
name <- names(data[i])
data <- data[- 1, - i]
data$var_non_stat <- var_non_stat
names(data$var_non_stat) <- name
}
}
}
stat.tests(data)
View(data)
# Big Data project for M2 EKAP
library(readxl)
library(gets)
library(glmnet)
library(corrplot)
library(tidyverse)
library(doParallel)
library(tseries)
library(lmtest)
library(ggplot2)
setwd("/Users/Lucas/Desktop/Cours/Big Data")
data = data.frame(read_excel('data.xlsx')[1 : 980,])
summary(data)
cor <- cor(data[, - c(1, 2)], use = 'complete.obs', method = c("spearman"))
corrplot(cor, method = "color")
cor_comp <- cor(data[, 2 : 28], use = 'complete.obs', method = c("spearman"))
corrplot(cor_comp, method = "color")
y <- as.matrix(scale(data[, 2], center = T, scale = F))
ggplot(mapping = aes(x = date, y = Index), data)+
geom_line(col = 'steelblue')+
theme_minimal()
x <- as.matrix(data[, - c(1,2)])
stat.tests
stat.tests <- function(data){
for(i in 1 : length(data)){
adf <- FALSE
kpss <- FALSE
q <- FALSE
ar <- FALSE
if(adf.test(data[, i])$p.value > 0.05){
adf = TRUE
}
if(kpss.test(data[, i])$p.value < 0.05){
kpss = TRUE
}
if(Box.test(data[, i], lag = 1, type = c("Ljung-Box")) < 0.05){
q = TRUE
}
if(arima(x = y, order = c(1,0,0))[["coef"]][["ar1"]] > 0.7){
ar = TRUE
}
if(adf & kpss | adf & q | adf & ar | kpss & ar | kpss & q | ar & q == TRUE){
print(paste('variable :', names(data[i]), 'non-stationnaire'), sep = ' ')
var_non_stat <- diff(data[, i])
name <- names(data[i])
data <- data[- 1, - i]
data$var_non_stat <- var_non_stat
names(data$var_non_stat) <- name
}
}
}
stat.tests(data)
View(data)
# Big Data project for M2 EKAP
library(readxl)
library(gets)
library(glmnet)
library(corrplot)
library(tidyverse)
library(doParallel)
library(tseries)
library(lmtest)
library(ggplot2)
setwd("/Users/Lucas/Desktop/Cours/Big Data")
data = data.frame(read_excel('data.xlsx')[1 : 980,])
summary(data)
cor <- cor(data[, - c(1, 2)], use = 'complete.obs', method = c("spearman"))
corrplot(cor, method = "color")
cor_comp <- cor(data[, 2 : 28], use = 'complete.obs', method = c("spearman"))
corrplot(cor_comp, method = "color")
y <- as.matrix(scale(data[, 2], center = T, scale = F))
ggplot(mapping = aes(x = date, y = Index), data)+
geom_line(col = 'steelblue')+
theme_minimal()
x <- as.matrix(data[, - c(1,2)])
View(data)
stat.tests(data)
stat.tests <- function(data){
for(i in 1 : length(data)){
adf <- FALSE
kpss <- FALSE
q <- FALSE
ar <- FALSE
if(adf.test(data[, i])$p.value > 0.05){
adf = TRUE
}
if(kpss.test(data[, i])$p.value < 0.05){
kpss = TRUE
}
if(Box.test(data[, i], lag = 1, type = c("Ljung-Box")) < 0.05){
q = TRUE
}
if(arima(x = y, order = c(1,0,0))[["coef"]][["ar1"]] > 0.7){
ar = TRUE
}
if(adf & kpss | adf & q | adf & ar | kpss & ar | kpss & q | ar & q == TRUE){
print(paste('variable :', names(data[i]), 'non-stationnaire'), sep = ' ')
var_non_stat <- diff(data[, i])
name <- names(data[i])
data <- data[- 1, - i]
data$var_non_stat <- var_non_stat
names(data$var_non_stat) <- name
}
}
}
stat.tests(data)
View(data)
View(y)
k <- 5
diff(data[, k])
data <- data[- 1, - k]
View(data)
stat.tests <- function(data){
for(i in 1 : length(data)){
adf <- FALSE
kpss <- FALSE
q <- FALSE
ar <- FALSE
if(adf.test(data[, i])$p.value > 0.05){
adf = TRUE
}
if(kpss.test(data[, i])$p.value < 0.05){
kpss = TRUE
}
if(Box.test(data[, i], lag = 1, type = c("Ljung-Box")) < 0.05){
q = TRUE
}
if(arima(x = y, order = c(1,0,0))[["coef"]][["ar1"]] > 0.7){
ar = TRUE
}
if(adf & kpss | adf & q | adf & ar | kpss & ar | kpss & q | ar & q == TRUE){
print(paste('variable :', names(data[i]), 'non-stationnaire'), sep = ' ')
var_non_stat <- diff(data[, i])
name <- names(data[i])
data <- data[- 1, - i]
data$var_non_stat <- var_non_stat
names(data$var_non_stat) <- name
}
}
}
# Big Data project for M2 EKAP
library(readxl)
library(gets)
library(glmnet)
library(corrplot)
library(tidyverse)
library(doParallel)
library(tseries)
library(lmtest)
library(ggplot2)
setwd("/Users/Lucas/Desktop/Cours/Big Data")
data = data.frame(read_excel('data.xlsx')[1 : 980,])
summary(data)
cor <- cor(data[, - c(1, 2)], use = 'complete.obs', method = c("spearman"))
corrplot(cor, method = "color")
cor_comp <- cor(data[, 2 : 28], use = 'complete.obs', method = c("spearman"))
corrplot(cor_comp, method = "color")
y <- as.matrix(scale(data[, 2], center = T, scale = F))
ggplot(mapping = aes(x = date, y = Index), data)+
geom_line(col = 'steelblue')+
theme_minimal()
x <- as.matrix(data[, - c(1,2)])
stat.tests <- function(data){
for(i in 1 : length(data)){
adf <- FALSE
kpss <- FALSE
q <- FALSE
ar <- FALSE
if(adf.test(data[, i])$p.value > 0.05){
adf = TRUE
}
if(kpss.test(data[, i])$p.value < 0.05){
kpss = TRUE
}
if(Box.test(data[, i], lag = 1, type = c("Ljung-Box")) < 0.05){
q = TRUE
}
if(arima(x = y, order = c(1,0,0))[["coef"]][["ar1"]] > 0.7){
ar = TRUE
}
if(adf & kpss | adf & q | adf & ar | kpss & ar | kpss & q | ar & q == TRUE){
print(paste('variable :', names(data[i]), 'non-stationnaire'), sep = ' ')
var_non_stat <- diff(data[, i])
name <- names(data[i])
data <- data[- 1, - i]
data$var_non_stat <- var_non_stat
names(data$var_non_stat) <- name
}
}
}
stat.tests(data)
warnings()
var_non_stat <- data
stat.tests <- function(data){
for(i in 1 : length(data)){
adf <- FALSE
kpss <- FALSE
q <- FALSE
ar <- FALSE
var_non_stat <- data
if(adf.test(data[, i])$p.value > 0.05){
adf = TRUE
}
if(kpss.test(data[, i])$p.value < 0.05){
kpss = TRUE
}
if(Box.test(data[, i], lag = 1, type = c("Ljung-Box")) < 0.05){
q = TRUE
}
if(arima(x = y, order = c(1,0,0))[["coef"]][["ar1"]] > 0.7){
ar = TRUE
}
if(adf & kpss | adf & q | adf & ar | kpss & ar | kpss & q | ar & q == TRUE){
print(paste('variable :', names(data[i]), 'non-stationnaire'), sep = ' ')
var_non_stat[, i] <- diff(data[, i])
names(var_non_stat[i]) <- names(data[i])
}
}
data <- data[- 1,]
for(i in 1 : length(data)){
if(names(var_non_stat[i]) == names(data[i])){
data[, i] <- var_non_stat[, i]
}
}
}
stat.tests(data)
View(var_non_stat)
View(data)
# Big Data project for M2 EKAP
library(readxl)
library(gets)
library(glmnet)
library(corrplot)
library(tidyverse)
library(doParallel)
library(tseries)
library(lmtest)
library(ggplot2)
setwd("/Users/Lucas/Desktop/Cours/Big Data")
data = data.frame(read_excel('data.xlsx')[1 : 980,])
summary(data)
cor <- cor(data[, - c(1, 2)], use = 'complete.obs', method = c("spearman"))
corrplot(cor, method = "color")
cor_comp <- cor(data[, 2 : 28], use = 'complete.obs', method = c("spearman"))
corrplot(cor_comp, method = "color")
y <- as.matrix(scale(data[, 2], center = T, scale = F))
ggplot(mapping = aes(x = date, y = Index), data)+
geom_line(col = 'steelblue')+
theme_minimal()
x <- as.matrix(data[, - c(1,2)])
stat.tests <- function(data){
for(i in 1 : length(data)){
adf <- FALSE
kpss <- FALSE
q <- FALSE
ar <- FALSE
var_non_stat <- data
if(adf.test(data[, i])$p.value > 0.05){
adf = TRUE
}
if(kpss.test(data[, i])$p.value < 0.05){
kpss = TRUE
}
if(Box.test(data[, i], lag = 1, type = c("Ljung-Box")) < 0.05){
q = TRUE
}
if(arima(x = y, order = c(1,0,0))[["coef"]][["ar1"]] > 0.7){
ar = TRUE
}
if(adf & kpss | adf & q | adf & ar | kpss & ar | kpss & q | ar & q == TRUE){
print(paste('variable :', names(data[i]), 'non-stationnaire'), sep = ' ')
var_non_stat[, i] <- diff(data[, i])
names(var_non_stat[i]) <- names(data[i])
}
}
data <- data[- 1,]
for(i in 1 : length(data)){
if(names(var_non_stat[i]) == names(data[i])){
data[, i] <- var_non_stat[, i]
}
}
}
stat.tests(data)
# Big Data project for M2 EKAP
library(readxl)
library(gets)
library(glmnet)
library(corrplot)
library(tidyverse)
library(doParallel)
library(tseries)
library(lmtest)
library(ggplot2)
setwd("/Users/Lucas/Desktop/Cours/Big Data")
data = data.frame(read_excel('data.xlsx')[1 : 980,])
summary(data)
cor <- cor(data[, - c(1, 2)], use = 'complete.obs', method = c("spearman"))
corrplot(cor, method = "color")
cor_comp <- cor(data[, 2 : 28], use = 'complete.obs', method = c("spearman"))
corrplot(cor_comp, method = "color")
y <- as.matrix(scale(data[, 2], center = T, scale = F))
ggplot(mapping = aes(x = date, y = Index), data)+
geom_line(col = 'steelblue')+
theme_minimal()
x <- as.matrix(data[, - c(1,2)])
stat.tests <- function(data){
var_non_stat <<- data[- 1,]
for(i in 1 : length(data)){
adf <- FALSE
kpss <- FALSE
q <- FALSE
ar <- FALSE
if(adf.test(data[, i])$p.value > 0.05){
adf = TRUE
}
if(kpss.test(data[, i])$p.value < 0.05){
kpss = TRUE
}
if(Box.test(data[, i], lag = 1, type = c("Ljung-Box"))$p.value < 0.05){
q = TRUE
}
if(arima(x = y, order = c(1,0,0))[["coef"]][["ar1"]] > 0.7){
ar = TRUE
}
if(adf & kpss | adf & q | adf & ar | kpss & ar | kpss & q | ar & q == TRUE){
print(paste('variable :', names(data[i]), 'non-stationnaire'), sep = ' ')
var_non_stat[i] <<- diff(data[, i])
names(var_non_stat[i]) <<- names(data[, i])
}
}
}
stat.tests(data)
stat.tests <- function(data){
var_non_stat <<- data[- 1,]
for(i in 1 : nrows(data)){
adf <- FALSE
kpss <- FALSE
q <- FALSE
ar <- FALSE
if(adf.test(data[, i])$p.value > 0.05){
adf = TRUE
}
if(kpss.test(data[, i])$p.value < 0.05){
kpss = TRUE
}
if(Box.test(data[, i], lag = 1, type = c("Ljung-Box"))$p.value < 0.05){
q = TRUE
}
if(arima(x = y, order = c(1,0,0))[["coef"]][["ar1"]] > 0.7){
ar = TRUE
}
if(adf & kpss | adf & q | adf & ar | kpss & ar | kpss & q | ar & q == TRUE){
print(paste('variable :', names(data[i]), 'non-stationnaire'), sep = ' ')
var_non_stat[i] <<- diff(data[, i])
names(var_non_stat[i]) <<- names(data[, i])
}
}
}
stat.tests(data)
nrow(data)
ncol(data)
stat.tests <- function(data){
var_non_stat <<- data[- 1,]
for(i in 1 : ncol(data)){
adf <- FALSE
kpss <- FALSE
q <- FALSE
ar <- FALSE
if(adf.test(data[, i])$p.value > 0.05){
adf = TRUE
}
if(kpss.test(data[, i])$p.value < 0.05){
kpss = TRUE
}
if(Box.test(data[, i], lag = 1, type = c("Ljung-Box"))$p.value < 0.05){
q = TRUE
}
if(arima(x = y, order = c(1,0,0))[["coef"]][["ar1"]] > 0.7){
ar = TRUE
}
if(adf & kpss | adf & q | adf & ar | kpss & ar | kpss & q | ar & q == TRUE){
print(paste('variable :', names(data[i]), 'non-stationnaire'), sep = ' ')
var_non_stat[i] <<- diff(data[, i])
names(var_non_stat[i]) <<- names(data[, i])
}
}
}
stat.tests(data)
setwd("/Users/Lucas/Desktop/Cours/Big Data")
data = data.frame(read_excel('data.xlsx')[1 : 980,])
summary(data)
cor <- cor(data[, - c(1, 2)], use = 'complete.obs', method = c("spearman"))
corrplot(cor, method = "color")
cor_comp <- cor(data[, 2 : 28], use = 'complete.obs', method = c("spearman"))
corrplot(cor_comp, method = "color")
y <- as.matrix(scale(data[, 2], center = T, scale = F))
ggplot(mapping = aes(x = date, y = Index), data)+
geom_line(col = 'steelblue')+
theme_minimal()
x <- as.matrix(data[, - c(1,2)])
stat.tests <- function(data){
var_non_stat <<- data[- 1,]
for(i in 1 : ncol(data)){
adf <- FALSE
kpss <- FALSE
q <- FALSE
ar <- FALSE
if(adf.test(data[, i])$p.value > 0.05){
adf = TRUE
}
if(kpss.test(data[, i])$p.value < 0.05){
kpss = TRUE
}
if(Box.test(data[, i], lag = 1, type = c("Ljung-Box"))$p.value < 0.05){
q = TRUE
}
if(arima(x = y, order = c(1,0,0))[["coef"]][["ar1"]] > 0.7){
ar = TRUE
}
if(adf & kpss | adf & q | adf & ar | kpss & ar | kpss & q | ar & q == TRUE){
print(paste('variable :', names(data[i]), 'non-stationnaire'), sep = ' ')
var_non_stat[i] <<- diff(data[, i])
names(var_non_stat[i]) <<- names(data[, i])
}
}
}
stat.tests(data)
View(var_non_stat)
diff(data[2])
diff(data[♀,2])
diff(data[,2])
